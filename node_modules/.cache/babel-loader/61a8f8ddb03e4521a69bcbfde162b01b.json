{"ast":null,"code":"var _jsxFileName = \"/Users/toomasherodes/frb/src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { db } from \"./firebase-config\";\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  /*const [newName, setNewName] = useState(\"\");\n  const [updateName, setUpdateName] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const usersCollectionRef = collection(db, \"users\");\n   const createUser = async () => {\n    await addDoc(usersCollectionRef, { name: newName });\n  };\n   const updateNameFun = async (id) => {\n    const userDoc = doc(db, \"users\", id);\n    const newFields = { name: { updateName } };\n    await updateDoc(userDoc, newFields);\n  };\n   useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    };\n     getUsers();\n  }, []);*/\n  return (\n    /*#__PURE__*/\n\n    /*<div className=\"App\">\n      <div>\n        {\" \"}\n        <h1>ASDasdasd</h1>\n      </div>\n       <input\n        placeholder=\"Name...\"\n        onChange={(event) => {\n          setNewName(event.target.value);\n        }}\n      />\n      <button onClick={createUser}> Add</button>\n      {users.map((user) => {\n        return (\n          <div>\n            <h1> Name: {user.name}</h1>\n            <input\n              placeholder=\"New Name\"\n              onChange={(event) => {\n                setUpdateName(event.target.value);\n              }}\n            />\n            <button\n              onClick={() => {\n                updateNameFun(user.id);\n              }}\n            >\n              Update\n            </button>\n          </div>\n        );\n      })}\n    </div>*/\n    _jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" asd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","db","collection","getDocs","addDoc","updateDoc","doc","App"],"sources":["/Users/toomasherodes/frb/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { db } from \"./firebase-config\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\n\nfunction App() {\n  /*const [newName, setNewName] = useState(\"\");\n  const [updateName, setUpdateName] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const usersCollectionRef = collection(db, \"users\");\n\n  const createUser = async () => {\n    await addDoc(usersCollectionRef, { name: newName });\n  };\n\n  const updateNameFun = async (id) => {\n    const userDoc = doc(db, \"users\", id);\n    const newFields = { name: { updateName } };\n    await updateDoc(userDoc, newFields);\n  };\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    };\n\n    getUsers();\n  }, []);*/\n  return (\n    /*<div className=\"App\">\n      <div>\n        {\" \"}\n        <h1>ASDasdasd</h1>\n      </div>\n\n      <input\n        placeholder=\"Name...\"\n        onChange={(event) => {\n          setNewName(event.target.value);\n        }}\n      />\n      <button onClick={createUser}> Add</button>\n      {users.map((user) => {\n        return (\n          <div>\n            <h1> Name: {user.name}</h1>\n            <input\n              placeholder=\"New Name\"\n              onChange={(event) => {\n                setUpdateName(event.target.value);\n              }}\n            />\n            <button\n              onClick={() => {\n                updateNameFun(user.id);\n              }}\n            >\n              Update\n            </button>\n          </div>\n        );\n      })}\n    </div>*/\n    <div>\n      {\" \"}\n      <h1> asd</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,GALF,QAMO,oBANP;;;AAQA,SAASC,GAAT,GAAe;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKE;IAAA;;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEI;MAAA,WACG,GADH,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAnCF;AAwCD;;KAhEQA,G;AAkET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}